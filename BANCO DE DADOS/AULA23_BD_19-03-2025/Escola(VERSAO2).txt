-- Criar o banco de dados
CREATE DATABASE escola_tecnica;
USE escola_tecnica;

-- Tabela de Cursos
CREATE TABLE cursos (
    id INT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    turno VARCHAR(20) NOT NULL,
    area VARCHAR(50) NOT NULL
);

-- Tabela de Aluno
CREATE TABLE aluno (
    num_matri INT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    data_nasci DATE NOT NULL,
    rua VARCHAR(100),
    cep VARCHAR(10),
    bairro VARCHAR(50),
    cidade VARCHAR(50),
    curso_id INT,
    FOREIGN KEY (curso_id) REFERENCES cursos(id)
);

-- Tabela de Matrícula (um aluno pode ter várias matrículas)
CREATE TABLE matricula (
    id INT PRIMARY KEY AUTO_INCREMENT,
    aluno_id INT NOT NULL,
    curso_id INT NOT NULL,
    data_matri DATE NOT NULL,
    FOREIGN KEY (aluno_id) REFERENCES aluno(num_matri),
    FOREIGN KEY (curso_id) REFERENCES cursos(id)
);

-- Tabela de Sala
CREATE TABLE sala (
    cod_sala INT PRIMARY KEY,
    nome VARCHAR(50) NOT NULL,
    localizacao VARCHAR(100) NOT NULL
);

-- Tabela de Docente (Professor)
CREATE TABLE docente (
    cod_doce INT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    endereco VARCHAR(200) NOT NULL
);

-- Tabela de Telefones do Professor (um professor pode ter vários telefones)
CREATE TABLE telefone_docente (
    id INT PRIMARY KEY AUTO_INCREMENT,
    docente_id INT NOT NULL,
    telefone VARCHAR(20) NOT NULL,
    FOREIGN KEY (docente_id) REFERENCES docente(cod_doce)
);

-- Tabela de Dependentes do Professor
CREATE TABLE dependentes (
    cod_depe INT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    data_nasc DATE,
    grau_parentesco VARCHAR(50),
    docente_id INT NOT NULL,
    FOREIGN KEY (docente_id) REFERENCES docente(cod_doce)
);

-- Tabela de Disciplina
CREATE TABLE disciplina (
    cod_disc INT PRIMARY KEY,
    descricao VARCHAR(200) NOT NULL
);

-- Tabela de relação entre Aluno e Disciplina (muitos para muitos) com período
CREATE TABLE aluno_disciplina (
    aluno_id INT,
    disciplina_id INT,
    periodo VARCHAR(10) NOT NULL,
    PRIMARY KEY (aluno_id, disciplina_id),
    FOREIGN KEY (aluno_id) REFERENCES aluno(num_matri),
    FOREIGN KEY (disciplina_id) REFERENCES disciplina(cod_disc)
);

-- Tabela de relação entre Docente e Disciplina (muitos para muitos)
CREATE TABLE docente_disciplina (
    docente_id INT,
    disciplina_id INT,
    PRIMARY KEY (docente_id, disciplina_id),
    FOREIGN KEY (docente_id) REFERENCES docente(cod_doce),
    FOREIGN KEY (disciplina_id) REFERENCES disciplina(cod_disc)
);

-- Tabela intermediária para associar múltiplas disciplinas a uma sala
CREATE TABLE sala_disciplina (
    id INT PRIMARY KEY AUTO_INCREMENT,
    sala_id INT NOT NULL,
    disciplina_id INT NOT NULL,
    horario VARCHAR(20) NOT NULL,
    FOREIGN KEY (sala_id) REFERENCES sala(cod_sala),
    FOREIGN KEY (disciplina_id) REFERENCES disciplina(cod_disc)
);

-- Tabela para armazenar telefones dos alunos
CREATE TABLE telefone_aluno (
    id INT PRIMARY KEY AUTO_INCREMENT,
    aluno_id INT NOT NULL,
    telefone VARCHAR(20) NOT NULL,
    FOREIGN KEY (aluno_id) REFERENCES aluno(num_matri)
);
